{
  "openapi": "3.0.1",
  "info": {
    "title": "API Docs",
    "version": "1.1"
  },
  "servers": [
    {
      "url": "https://api.appcontx.com/"
    }
  ],
  "security": [
    {
      "APIKeyHeader": []
    }
  ],
  "tags": [
    {
      "name": "Accounts"
    },
    {
      "name": "Users"
    }
  ],
  "paths": {
    "/accounts/me": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "description": "Get business account details.",
        "operationId": "getPageInformation",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page_id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "name": {
                      "type": "string"
                    },
                    "active": {
                      "type": "boolean",
                      "description": "If false the admins of the bot can't access the dashboard."
                    },
                    "created": {
                      "type": "integer",
                      "description": "Timestamp representing the date the bot was created",
                      "format": "int64"
                    },
                    "total_users": {
                      "type": "integer",
                      "description": "The total number of bot users.",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/admins": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "description": "Get all admins from a business account.",
        "operationId": "getPageTags",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Admin"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/tags": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "description": "Get all tags from a business account.",
        "operationId": "getPageTags",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Accounts"
        ],
        "description": "Create a new tag",
        "operationId": "createTag",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "name"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The the new tag ID.",
                      "format": "int64"
                    }
                  },
                  "example": {
                    "id": 1995
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/tags/{tag_id}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "description": "Get tag by id",
        "operationId": "getTagById",
        "parameters": [
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Accounts"
        ],
        "description": "Delete a tag",
        "operationId": "deleteTag",
        "parameters": [
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "example": {
                    "success": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/tags/name/{tag_name}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "description": "Get a tag by name",
        "operationId": "getTagByName",
        "parameters": [
          {
            "name": "tag_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/flows": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "description": "Get all flows from a business account.",
        "operationId": "getPageFlows",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/custom_fields": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "description": "Get all custom fields from a business account.",
        "operationId": "getPageCustomFields",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "integer",
                        "description": "0 - Text, 1 - Number, 2- Date (Unix timestamp), 3 - Date & Time (Unix timestamp), 4 - Boolean(0 or 1)"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Accounts"
        ],
        "description": "Create a custom field",
        "operationId": "createCustomField",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "integer",
                    "description": "0 - text | 1 - number | 2 - date | 3 - datetime | 4 - true/false"
                  },
                  "isBotField": {
                    "type": "boolean",
                    "default": false
                  },
                  "value": {
                    "type": "string",
                    "description": "The value of the bot field. It is ignored for the user custom field."
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "lead_score",
                  "type": 1
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The ID of the new custom field",
                      "format": "int64"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "id": 1995,
                    "name": "lead_score"
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "content"
      }
    },
    "/accounts/custom_fields/{custom_field_id}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "description": "Get custom field by id",
        "operationId": "getCustomFieldById",
        "parameters": [
          {
            "name": "custom_field_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "integer",
                      "description": "0 - Text, 1 - Number, 2- Date (Unix timestamp), 3 - Date & Time (Unix timestamp), 4 - Boolean(0 or 1)"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/custom_fields/name/{custom_field_name}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "description": "Get custom field by name",
        "operationId": "getCustomFieldByName",
        "parameters": [
          {
            "name": "custom_field_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "integer",
                      "description": "0 - Text, 1 - Number, 2- Date (Unix timestamp), 3 - Date & Time (Unix timestamp), 4 - Boolean(0 or 1)"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/bot_fields/{bot_field_id}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "description": "Get bot field value by id",
        "operationId": "getBFieldValue",
        "parameters": [
          {
            "name": "bot_field_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "type": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "id": 2334,
                    "name": "age",
                    "type": 1,
                    "value": 25
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Accounts"
        ],
        "description": "Set a bot field value",
        "operationId": "setBField",
        "parameters": [
          {
            "name": "bot_field_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "value"
                ],
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "example": {
                    "success": true
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Accounts"
        ],
        "description": "Unset the value of a bot field",
        "operationId": "removeBField",
        "parameters": [
          {
            "name": "bot_field_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "example": {
                    "success": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/template/{template_id}/generateSingleUseLink": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "description": "Generate single-use template link",
        "operationId": "generateTemplateLink",
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "description": "You can get template ID from the template link",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "link": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "link": "https://..."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get user by user id",
        "operationId": "getUserByName",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username supplied",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      }
    },
    "/users/find_by_custom_field": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Find users by custom field value. It will return maximum 100 users. The results are sorted by the last custom field value update for a user. ",
        "operationId": "findByCustomField",
        "parameters": [
          {
            "name": "field_id",
            "in": "query",
            "description": "Custom field ID. Use 'phone' or 'email' as custom field id if you want to find the user by phone or email",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters",
            "content": {}
          }
        }
      }
    },
    "/users/{user_id}/tags": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get all tags added to this user",
        "operationId": "getUserTags",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/tags/{tag_id}": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Add a tag to the user",
        "operationId": "addTagToUser",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "example": {
                    "success": true
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "remove a tag from the user",
        "operationId": "removeTagFromUser",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "example": {
                    "success": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Create a new SMS or WhatsApp.",
        "operationId": "createNewContact",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string",
                    "description": "The phone number with country code"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "gender": {
                    "type": "string",
                    "enum": [
                      "male",
                      "female",
                      "unknown"
                    ]
                  },
                  "actions": {
                    "type": "array",
                    "description": "Actions can be send flow, add/remove tags, set/unset custom field ..."
                  }
                },
                "example": {
                  "phone": "+1234567890",
                  "first_name": "John",
                  "last_name": "Smith",
                  "gender": "male",
                  "actions": [
                    {
                      "action": "send_flow",
                      "flow_id": 11111
                    },
                    {
                      "action": "add_tag",
                      "tag_name": "YOU_TAG_NAME"
                    },
                    {
                      "action": "set_field_value",
                      "field_name": "YOU_CUSTOM_FIELD_NAME",
                      "value": "ANY_VALUE"
                    }
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "content"
      }
    },
    "/users/{user_id}/custom_fields": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get all custom fields from a user",
        "operationId": "getUserFields",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Custom_field"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/custom_fields/{custom_field_id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get custom field value by id",
        "operationId": "getFieldValue",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "custom_field_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "type": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "id": 2334,
                    "name": "age",
                    "type": 1,
                    "value": 25
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Set a user custom field",
        "operationId": "addFieldToUser",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "custom_field_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "value"
                ],
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "example": {
                    "success": true
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "remove a custom field from the user",
        "operationId": "removeFieldFromUser",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "custom_field_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "example": {
                    "success": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/send/{flow_id}": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Send a flow to user",
        "operationId": "sendFlowToUser",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {}
          }
        }
      }
    },
    "/users/{user_id}/send/text": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Send text message to the contact",
        "operationId": "sendTextMessage",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string"
                  },
                  "channel": {
                    "type": "string",
                    "enum": [
                      "messenger",
                      "whatsapp",
                      "sms",
                      "webchat",
                      "telegram",
                      "instagram",
                      "viber",
                      "omnichannel"
                    ]
                  }
                },
                "example": {
                  "text": "This is a text message",
                  "channel": "messenger"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "example": {
                    "success": true
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "content"
      }
    },
    "/users/{user_id}/send/file": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Send file",
        "operationId": "sendFile",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "file",
                      "image",
                      "audio",
                      "video"
                    ]
                  },
                  "channel": {
                    "type": "string",
                    "enum": [
                      "messenger",
                      "sms",
                      "whatsapp",
                      "googleBM",
                      "telegram",
                      "instagram",
                      "viber",
                      "omnichannel"
                    ]
                  }
                },
                "example": {
                  "url": "https://...",
                  "type": "image",
                  "channel": "messenger"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "example": {
                    "success": true
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "content"
      }
    },
    "/users/{user_id}/send_content": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Allows to run multiple actions and send multiple messages. Works for all channels.",
        "operationId": "sendContent",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "messages": {
                    "type": "array"
                  },
                  "actions": {
                    "type": "array"
                  },
                  "channel": {
                    "type": "string",
                    "enum": [
                      "messenger",
                      "sms",
                      "whatsapp",
                      "googleBM",
                      "telegram",
                      "instagram",
                      "rcs",
                      "viber",
                      "omnichannel"
                    ]
                  },
                  "message_tag": {
                    "type": "string",
                    "description": "Only used by Messenger channel. Use Message channel to send messages outside 24h window",
                    "enum": [
                      "CONFIRMED_EVENT_UPDATE",
                      "POST_PURCHASE_UPDATE",
                      "ACCOUNT_UPDATE"
                    ]
                  }
                },
                "example": {
                  "messages": [
                    {
                      "message": {
                        "text": "Hello world"
                      }
                    }
                  ],
                  "actions": [],
                  "channel": "messenger"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "content"
      }
    },
    "/pipelines/": {
      "get": {
        "tags": [
          "Pipelines"
        ],
        "description": "Get list of pipelines",
        "operationId": "getPipelines",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "Specifies the starting position of the first record to return in a paginated response.",
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Sets the maximum number of records to return per request.",
            "schema": {
              "type": "integer",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Pipeline"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pipelines/{pipeline_id}": {
      "get": {
        "tags": [
          "Pipelines"
        ],
        "description": "Get list of pipelines",
        "operationId": "getPipelines",
        "parameters": [
          {
            "name": "pipeline_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pipeline"
                }
              }
            }
          }
        }
      }
    },
    "/pipelines/{pipeline_id}/stages": {
      "get": {
        "tags": [
          "Pipelines"
        ],
        "description": "Get list of pipeline stages",
        "operationId": "getPipelineStages",
        "parameters": [
          {
            "name": "pipeline_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PipelineStage"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pipelines/{pipeline_id}/opportunities": {
      "get": {
        "tags": [
          "Pipelines"
        ],
        "description": "Get list of opportunities / tickets",
        "operationId": "pipelinesGetCards",
        "parameters": [
          {
            "name": "pipeline_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Specifies the starting position of the first record to return in a paginated response.",
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Sets the maximum number of records to return per request.",
            "schema": {
              "type": "integer",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Opportunity"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Pipelines"
        ],
        "description": "Creates an opportunity / ticket.",
        "operationId": "pipelinesAddCard",
        "parameters": [
          {
            "name": "pipeline_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Creates an opportunity / ticket",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contact_id": {
                    "type": "number"
                  },
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "stage_id": {
                    "type": "number",
                    "description": "if omitted, the the contact is added to first stage."
                  },
                  "value": {
                    "type": "number"
                  },
                  "status": {
                    "type": "string",
                    "description": "won is positive and lost is negative",
                    "default": "open",
                    "enum": [
                      "open",
                      "won",
                      "lost"
                    ]
                  },
                  "priority": {
                    "type": "string",
                    "default": "medium",
                    "enum": [
                      "low",
                      "medium",
                      "high"
                    ]
                  },
                  "assigned_admins": {
                    "type": "array"
                  }
                },
                "example": {
                  "contact_id": "12345678",
                  "title": "This is a test opportunity",
                  "description": "...",
                  "stage_id": 12334,
                  "value": 300,
                  "status": "open",
                  "priority": "low",
                  "assigned_admins": [
                    55446563
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Opportunity"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "content"
      }
    },
    "/pipelines/{pipeline_id}/opportunities/{opportunity_id}": {
      "get": {
        "tags": [
          "Pipelines"
        ],
        "description": "Get an opportunity / ticket",
        "operationId": "pipelinesGetCard",
        "parameters": [
          {
            "name": "pipeline_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "opportunity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Opportunity"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Pipelines"
        ],
        "description": "Updates an opportunity / ticket.",
        "operationId": "pipelinesUpdateCard",
        "parameters": [
          {
            "name": "pipeline_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "opportunity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "stage_id": {
                    "type": "number",
                    "description": "if omitted, the the contact is added to first stage."
                  },
                  "value": {
                    "type": "number"
                  },
                  "status": {
                    "type": "string",
                    "description": "won is positive and lost is negative",
                    "default": "open",
                    "enum": [
                      "open",
                      "won",
                      "lost"
                    ]
                  },
                  "priority": {
                    "type": "string",
                    "default": "medium",
                    "enum": [
                      "low",
                      "medium",
                      "high"
                    ]
                  },
                  "assigned_admins": {
                    "type": "array"
                  }
                },
                "example": {
                  "title": "This is a test opportunity",
                  "description": "...",
                  "stage_id": 12334,
                  "value": 300,
                  "status": "open",
                  "priority": "low",
                  "assigned_admins": [
                    55446563
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "example": {
                    "success": true
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "content"
      },
      "delete": {
        "tags": [
          "Pipelines"
        ],
        "description": "Delete an opportunity / ticket",
        "operationId": "pipelinesDeleteCard",
        "parameters": [
          {
            "name": "pipeline_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "opportunity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "example": {
                    "success": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pipelines/{pipeline_id}/opportunities/{opportunity_id}/comments": {
      "get": {
        "tags": [
          "Pipelines"
        ],
        "description": "Get list of comments of an opportunity / ticket",
        "operationId": "pipelinesGetComments",
        "parameters": [
          {
            "name": "pipeline_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "opportunity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Specifies the starting position of the first record to return in a paginated response.",
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Sets the maximum number of records to return per request.",
            "schema": {
              "type": "integer",
              "default": 100
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OpportunityComment"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Pipelines"
        ],
        "description": "Creates a new comment on an opportunity / ticket.",
        "operationId": "pipelinesAddComment",
        "parameters": [
          {
            "name": "pipeline_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "opportunity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string"
                  }
                },
                "example": {
                  "content": "This is a comment"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpportunityComment"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "content"
      }
    },
    "/pipelines/{pipeline_id}/opportunities/{opportunity_id}/comments/{comment_id}": {
      "delete": {
        "tags": [
          "Pipelines"
        ],
        "description": "Delete a comment of an opportunity / ticket",
        "operationId": "pipelinesDeleteComment",
        "parameters": [
          {
            "name": "pipeline_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "opportunity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "example": {
                    "success": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/send/products": {
      "post": {
        "tags": [
          "Ecommerce"
        ],
        "description": "Send a product message to the user",
        "operationId": "sendProduct",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "product_id": {
                    "type": "array",
                    "description": "The product_id  field could be a single product id, an array of product ids, or multiple product ids separated by a comma"
                  }
                },
                "example": {
                  "product_id": [
                    1111,
                    222,
                    3333
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "data"
      }
    },
    "/users/{user_id}/cart": {
      "get": {
        "tags": [
          "Ecommerce"
        ],
        "description": "Get the user cart ready for checkout",
        "operationId": "getUserCart",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Ecommerce"
        ],
        "description": "Clear the user cart",
        "operationId": "clearUserCart",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "example": {
                    "success": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/pay/{order_id}": {
      "post": {
        "tags": [
          "Ecommerce"
        ],
        "description": "Mark an order as Paid.",
        "operationId": "payOrder",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "amount_received"
                ],
                "type": "object",
                "properties": {
                  "amount_received": {
                    "type": "integer",
                    "description": "Total value the user paid in cents.",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "example": {
                    "success": true
                  }
                }
              }
            }
          },
          "400": {
            "description": "The amount received is less than the total value of the order.",
            "content": {}
          },
          "402": {
            "description": "The user received a message on Messenger why the checkout failed.",
            "content": {}
          },
          "404": {
            "description": "The order ID doesn't existe",
            "content": {}
          }
        }
      }
    },
    "/users/{user_id}/order/{order_id}": {
      "get": {
        "tags": [
          "Ecommerce"
        ],
        "description": "Get order information",
        "operationId": "getUserOrder",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ecommerce"
        ],
        "description": "Change order status.",
        "operationId": "changeOrder",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "The new order status. 6 - Processing, 7 - Shipped, 10 - Completed, 13 - Canceled."
                  },
                  "name": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "zip_code": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "street_1": {
                    "type": "string"
                  },
                  "street_2": {
                    "type": "string"
                  },
                  "note": {
                    "type": "string"
                  }
                },
                "example": {
                  "status": 7
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "example": {
                    "success": true
                  }
                }
              }
            }
          },
          "400": {
            "description": "Order status must be 6, 7, 10, or 13",
            "content": {}
          },
          "402": {
            "description": "The order status is the same as the previous status",
            "content": {}
          },
          "404": {
            "description": "The order ID doesn't existe",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "content"
      }
    },
    "/users/{user_id}/cart/{product_id}": {
      "post": {
        "tags": [
          "Ecommerce"
        ],
        "description": "Add a product to user cart",
        "operationId": "addProductCart",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "quantity"
                ],
                "type": "object",
                "properties": {
                  "quantity": {
                    "type": "integer",
                    "description": "",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "example": {
                    "success": true
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Ecommerce"
        ],
        "description": "remove a product from user cart",
        "operationId": "removeProductCart",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "example": {
                    "success": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/{product_id}": {
      "get": {
        "tags": [
          "Ecommerce"
        ],
        "description": "Get product by id",
        "operationId": "getProductById",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ecommerce"
        ],
        "description": "Update product.",
        "operationId": "updateProduct",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "price": {
                    "type": "number"
                  },
                  "active": {
                    "type": "boolean",
                    "description": "if users can buy the product."
                  },
                  "stock": {
                    "type": "number"
                  }
                },
                "example": {
                  "active": false,
                  "stock": 500,
                  "price": 40
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "updated": {
                      "type": "boolean"
                    }
                  },
                  "example": {
                    "success": true,
                    "updated": true
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "content"
      }
    }
  },
  "components": {
    "schemas": {
      "Cart": {
        "type": "object",
        "properties": {
          "order_id": {
            "type": "string"
          },
          "page_id": {
            "type": "integer",
            "format": "int64"
          },
          "user_id": {
            "type": "integer",
            "format": "int64"
          },
          "currency": {
            "type": "string"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "subtotal": {
            "type": "integer",
            "format": "int64"
          },
          "total_items": {
            "type": "integer",
            "format": "int32"
          },
          "coupon_discount": {
            "type": "integer",
            "format": "int64"
          },
          "coupon": {
            "type": "string"
          },
          "line_items": {
            "type": "array",
            "xml": {
              "name": "line_items",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ProductCart"
            }
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "description": "All value related to money is in cents",
        "xml": {
          "name": "cart"
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "page_id": {
            "type": "integer",
            "format": "int64"
          },
          "user_id": {
            "type": "integer",
            "format": "int64"
          },
          "created_at": {
            "type": "string",
            "description": "Subscribed date in UTC. Example 2022-10-12 14:40:00"
          },
          "created_timestamp": {
            "type": "integer",
            "description": "Date of the order in epoch/Unix timestamp",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "subtotal": {
            "type": "integer",
            "format": "int64"
          },
          "shipping_cost": {
            "type": "integer",
            "format": "int64"
          },
          "total_taxes": {
            "type": "integer",
            "format": "int64"
          },
          "total_discounts": {
            "type": "integer",
            "format": "int64"
          },
          "total_items": {
            "type": "integer",
            "format": "int32"
          },
          "coupon_discount": {
            "type": "integer",
            "format": "int64"
          },
          "coupon": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "Not processed",
              "Accepted",
              "Delivering",
              "Completed",
              "Canceled"
            ]
          },
          "line_items": {
            "type": "array",
            "xml": {
              "name": "line_items",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ProductCart"
            }
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "description": "All value related to money is in cents",
        "xml": {
          "name": "cart"
        }
      },
      "ProductCart": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "img": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "description": "the price is not in cents",
            "format": "double"
          },
          "amount": {
            "type": "integer",
            "description": "quantity"
          },
          "descr_min": {
            "type": "string"
          },
          "manufacturer": {
            "type": "integer",
            "description": "The vendor ID"
          },
          "variant": {
            "type": "string"
          },
          "user_msg": {
            "type": "string"
          }
        },
        "xml": {
          "name": "ProductCart"
        }
      },
      "Custom_field": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "integer",
            "description": "0 - Text, 1 - Number, 2- Date (Unix timestamp), 3 - Date & Time (Unix timestamp), 4 - Boolean(0 or 1)"
          },
          "value": {
            "type": "string",
            "description": "type == 0 then value is string, else value is a number"
          }
        },
        "xml": {
          "name": "Custom_field"
        }
      },
      "Admin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "full_name": {
            "type": "string"
          },
          "profile_pic": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Tag"
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Tag"
        }
      },
      "Pipeline": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Pipeline"
        }
      },
      "PipelineStage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "PipelineStage"
        }
      },
      "OpportunityComment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "format": "int64"
          },
          "data": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "description": "UTC",
            "example": "2028-02-08 12:34:56"
          },
          "created_by": {
            "type": "number",
            "description": "Admin ID"
          }
        },
        "xml": {
          "name": "OpportunityComment"
        }
      },
      "Opportunity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "contact_id": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "value": {
            "type": "number"
          },
          "status": {
            "type": "string"
          },
          "priority": {
            "type": "string"
          },
          "stage": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "assigned_admins": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "created_at": {
            "type": "string",
            "description": "UTC",
            "example": "2028-02-08 12:34:56"
          },
          "created_by": {
            "type": "number",
            "description": "Admin ID"
          },
          "updated_at": {
            "type": "string",
            "description": "UTC",
            "example": "2028-02-08 12:34:56"
          },
          "updated_by": {
            "type": "number",
            "description": "Admin ID"
          }
        },
        "xml": {
          "name": "Opportunity"
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "sale_price": {
            "type": "number",
            "format": "double"
          },
          "category_id": {
            "type": "integer",
            "format": "int64"
          },
          "category_name": {
            "type": "string"
          },
          "stock": {
            "type": "integer",
            "format": "int64"
          },
          "short_description": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "description": "Subscribed date in UTC. Example 2022-10-12 14:40:00"
          }
        },
        "xml": {
          "name": "Product"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "page_id": {
            "type": "integer",
            "format": "int64"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "channel": {
            "type": "integer",
            "description": "0 - Messenger, 2 - SMS, 5 - WhatsApp, 7 - Google Business Message, 8 - Telegram, 9 - Webchat"
          },
          "profile_pic": {
            "type": "string"
          },
          "locale": {
            "type": "string"
          },
          "gender": {
            "type": "integer",
            "description": "0 - Female, 1 - Male, 2 - Unknown"
          },
          "timezone": {
            "type": "integer"
          },
          "last_sent": {
            "type": "integer",
            "description": "Unix timestamp in milliseconds",
            "format": "int64"
          },
          "last_delivered": {
            "type": "integer",
            "description": "Unix timestamp in milliseconds",
            "format": "int64"
          },
          "last_seen": {
            "type": "integer",
            "description": "Unix timestamp in milliseconds",
            "format": "int64"
          },
          "last_interaction": {
            "type": "integer",
            "description": "Unix timestamp in milliseconds",
            "format": "int64"
          },
          "subscribed_date": {
            "type": "string",
            "description": "Subscribed date in UTC. Example 2022-10-12 14:40:00"
          },
          "subscribed": {
            "type": "integer",
            "description": "1 - Subscribed, 2 - Unsubscribed"
          },
          "tags": {
            "type": "array",
            "xml": {
              "name": "tag",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "custom_fields": {
            "type": "array",
            "xml": {
              "name": "tag",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Custom_field"
            }
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "Account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "fb_page_id": {
            "type": "integer",
            "format": "int64"
          },
          "instagram_id": {
            "type": "integer",
            "format": "int64"
          },
          "waba_id": {
            "type": "integer",
            "format": "int64"
          },
          "wa_phone_id": {
            "type": "integer",
            "format": "int64"
          },
          "viber_id": {
            "type": "integer",
            "format": "int64"
          },
          "active": {
            "type": "integer",
            "description": "0 - False, 1 True"
          },
          "plan": {
            "type": "integer",
            "description": "1 - Pro Subscription, 4 - FREE, 6 - Pro No Subscription, 11 - LTD, 12 - LTD, 13 - PRO Trial - Downgrade to FREE at the end, 15 - PRO Trial - Force to pay at the end"
          },
          "created": {
            "type": "string",
            "description": "The date (UTC) when the account was created"
          }
        },
        "xml": {
          "name": "Account"
        }
      }
    },
    "securitySchemes": {
      "APIKeyHeader": {
        "type": "apiKey",
        "name": "X-ACCESS-TOKEN",
        "in": "header"
      }
    }
  },
  "x-original-swagger-version": "2.0"
}